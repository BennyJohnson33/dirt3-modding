//--------------------------------------
//--- 010 Editor v3.1.3 Binary Template
//
// File: ctf.bt
// Author: Mike
// Purpose: Label ego engine .ctf files
//--------------------------------------
LittleEndian();

int pad;
int flag;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
string s;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
string s2;
float pad;
float pad;
string s3;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
int pad;
int pad;
float pad;
float pad;
float pad;
float gear_1st;
float gear_1st_downshift_multiple;
float gear_2nd;
float gear_3rd;
float gear_4th;
float gear_5th;
float gear_6th;
float gear_7th;
float gear_8th;
if (flag >= 35) {
    struct {
        float gear_power_mod_1;
        float gear_power_mod_2;
        float gear_power_mod_3;
        float gear_power_mod_4;
        float gear_power_mod_5;
        float gear_power_mod_6;
        float gear_power_mod_7;
    } optional;
}
float grip_reverse;
float grip_front;
float grip_rear;
float grip_weight_1;
float grip_weight_2;
float grip_weight_3;
float gsteer_lock_reduce_rate;
float gsteer_proportion;
float handbrake_grip_loss;
float handbrake_strength_multiple;
if (flag >= 0) {
    int unknown; // exe reads this, then casts to a bool
}
float high_speed_for_steering_rate;
float high_speed_steering_rate;
float idle_rate;
float inerter_front;
float inerter_rear;
float inertia_x;
float inertia_y;
float inertia_z;
if (flag >= 19) {
    struct { float jump_anti_gravity; } optional;
}
if (flag >= 18) {
    struct {
        float jumpassist_fall_rate;
        float jumpassist_multiple_cap;
        float jumpassist_fall_rate; // Again? you so crazy CM
    } optional;
}
float pad;
int pad;
int pad;
float pad;
float pad;
float pad;
float pad;
float mass;
float pad;
float pad;
float pad;
float pad;
float pad;
string s5;
float pad;
float pad;
float pad;
int pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
int pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
if (flag >= 34) {
    struct {
        float speed_for_optimal_launch; // This could be any of the 5 prev. values
    } optional;
}
string s6;
string s7;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
int pad;
string s8;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float pad;
float test;
if (flag >= 32) {
    struct {
        float pad;
        float pad;
        float pad;
        float pad;
        float pad;
        float pad;
        float pad;
    } optional;
}
if (flag >= 30) struct { float pad; } optional;
if (flag >= 31) struct { float pad; } optional;
if (flag >= 33) struct { float pad; } optional;
if (flag >= 30) struct { float pad; } optional;
if (flag >= 31) struct { float pad; } optional;
float pad;